---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Install packages
  package:
    name: "{{ pkg }}"
    state: present
  with_items: "{{ openio_netdata_packages }}"
  tags: install
  loop_control:
    loop_var: pkg
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set global configuration
  template:
    src: netdata.conf.j2
    dest: /etc/netdata/netdata.conf
    owner: "{{ netdata_user }}"
    group: "{{ netdata_group }}"
    mode: 0640

- block:
    - name: Add user netdata to openio group
      user:
        name: "{{ netdata_user }}"
        groups: openio
        append: true

    - name: Disable container plugin
      file:
        path: "{{ openio_netdata_plugins_directory }}/container.plugin"
        state: touch
        mode: "0644"
      when: openio_netdata_oio_container_plugin_target != ansible_hostname
      changed_when: false

    - name: Enable container plugin
      file:
        path: "{{ openio_netdata_plugins_directory }}/container.plugin"
        state: touch
        mode: "0755"
      when: openio_netdata_oio_container_plugin_target == ansible_hostname

    - name: Create temporary inventory directory
      local_action:
        module: tempfile
        state: directory
        suffix: inventory
      register: inv_dir
      changed_when: false

    - name: Make temporary directory writeable
      local_action:
        module: file
        path: "{{ inv_dir.path }}"
        owner: root
        group: root
        mode: '0777'
      changed_when: false

    - name: "Fetch inventory file"
      fetch:
        src: /etc/oio/sds/{{ openio_netdata_namespace }}/inventory.yml
        dest: "{{ inv_dir.path }}/inventories/{{ ansible_hostname }}.yml"
        flat: true
      changed_when: false

    - name: "Load inventory as fact"
      include_vars:
        file: "{{ inv_dir.path }}/inventories/{{ ansible_hostname }}.yml"
        name: "inventory"
      ignore_errors: "{{ ansible_check_mode }}"

    - name: "Select current namespace in inventory fact"
      set_fact:
        inventory: "{{ inventory.namespaces[openio_netdata_namespace].services }}"
      ignore_errors: "{{ ansible_check_mode }}"

    - name: "Set commands plugin configuration"
      copy:
        src: "commands/{{ ansible_os_family }}.conf"
        dest: "{{ openio_netdata_confdir }}/commands.conf"
        owner: "{{ netdata_user }}"
        group: "{{ netdata_group }}"

    - name: "Set python.d plugin configuration"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ netdata_user }}"
        group: "{{ netdata_group }}"
        mode: 0640
      when:
        - inventory is defined
        - openio_netdata_python_d_plugin_enabled
      with_items:
        - src: web_log.conf.j2
          dest: "{{ openio_netdata_confdir }}/python.d/web_log.conf"
        - src: python.d.conf.j2
          dest: "{{ openio_netdata_confdir }}/python.d.conf"
        - src: apps_groups.conf.j2
          dest: "{{ openio_netdata_confdir }}/apps_groups.conf"
        - src: beanstalk.conf.j2
          dest: "{{ openio_netdata_confdir }}/python.d/beanstalk.conf"
        - src: redis.conf.j2
          dest: "{{ openio_netdata_confdir }}/python.d/redis.conf"
  when: inventory_hostname in openio_netdata_inventory_oio_hosts

- name: Enable oiofs plugin
  file:
    path: "{{ openio_netdata_plugins_directory }}/fs.plugin"
    state: touch
    mode: "0755"
  changed_when: false

- name: Set oiofs endpoint configuration
  template:
    src: oiofs.conf.j2
    dest: "{{ openio_netdata_confdir }}/oiofs.conf"
    owner: "{{ netdata_user }}"
    group: "{{ netdata_group }}"
    mode: 0640
  when: openio_netdata_oiofs_mountpoints

- name: Restart netdata
  service:
    name: netdata
    state: "{{ 'restarted' if openio_netdata_provision_only else 'started' }}"
    enabled: "{{ openio_netdata_service_enabled }}"
...
